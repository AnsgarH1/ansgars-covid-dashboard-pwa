[{"/home/ansgar/codeProjects/reactProjects/ansgars-covid-dashboard/src/index.js":"1","/home/ansgar/codeProjects/reactProjects/ansgars-covid-dashboard/src/serviceWorkerRegistration.js":"2","/home/ansgar/codeProjects/reactProjects/ansgars-covid-dashboard/src/App.tsx":"3"},{"size":412,"mtime":1610566982130,"results":"4","hashOfConfig":"5"},{"size":5064,"mtime":1610311448880,"results":"6","hashOfConfig":"5"},{"size":11336,"mtime":1615074957190,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"140e5g1",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"/home/ansgar/codeProjects/reactProjects/ansgars-covid-dashboard/src/index.js",[],["18","19"],"/home/ansgar/codeProjects/reactProjects/ansgars-covid-dashboard/src/serviceWorkerRegistration.js",[],["20","21"],"/home/ansgar/codeProjects/reactProjects/ansgars-covid-dashboard/src/App.tsx",["22"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  Box,\n  Button,\n  Flex,\n  Heading,\n  Icon,\n  Input,\n  Link,\n  Spinner,\n  Text,\n} from \"@chakra-ui/react\";\nimport { Line } from \"@reactchartjs/react-chart.js\";\nimport React, { useEffect, useState } from \"react\";\n\ninterface ICovData {\n  OBJECTID: number;\n  AGS: string;\n  BEZ: string;\n  AGS_0: string;\n  EWZ: number;\n  death_rate: number;\n  cases: number;\n  deaths: number;\n  cases_per_100k: number;\n  cases_per_population: number;\n  BL: string;\n  BL_ID: string;\n  county: string;\n  last_update: string;\n  cases7_per_100k: number;\n  recovered: number;\n  EWZ_BL: number;\n  cases7_bl_per_100k: number;\n  cases7_bl: number;\n  death7_bl: number;\n  cases7_lk: number;\n  death7_lk: number;\n  cases7_per_100k_txt: string;\n  GEN: string;\n}\ninterface ICovHistoryData {\n  ags: String;\n  history: Array<any>;\n  name: String;\n}\n\ninterface ICardCompProps {\n  item: ICovData;\n  isFavorite: boolean;\n  handleFavoriteClick: () => void;\n  history: Array<ICovHistoryData>;\n}\n\nconst CardComp = ({\n  item,\n  isFavorite,\n  handleFavoriteClick,\n  history,\n}: ICardCompProps) => {\n  return (\n    <Box\n      key={item.OBJECTID}\n      background={Math.round(item.cases7_per_100k) >= 200 ? \"#e95d69\" : \"white\"}\n      m=\"6px\"\n      px=\"12px\"\n      py=\"12px\"\n      borderRadius=\"5px\"\n      color=\"gray.600\"\n      fontWeight=\"semibold\"\n      letterSpacing=\"wide\"\n      ml=\"2\"\n      display=\"flex\"\n      justifyContent=\"space-between\"\n    >\n      {/** Left Box */}\n      <Box maxWidth=\"70%\">\n        {/** Box with County Type and Star-Icon */}\n        <Box display=\"flex\" alignItems=\"bottom\">\n          <Icon\n            as={StarIcon}\n            color={isFavorite ? \"#f8f32b\" : \"#8f8f8f\"}\n            w=\"20px\"\n            mr=\"8px\"\n            onClick={handleFavoriteClick}\n          />\n          <Text fontSize=\"15px\">{item.BEZ}</Text>\n        </Box>\n        {/** Box with County Name and Date */}\n        <Box>\n          <Heading\n            fontSize=\"xl\"\n            onClick={() =>\n              console.log(\n                history\n                  .filter((county) => county.ags === item.AGS)[0]\n                  .history.slice(-5),\n                item\n              )\n            }\n          >\n            {item.GEN}\n          </Heading>\n          <Text fontSize=\"12px\">{item.last_update}</Text>\n        </Box>\n      </Box>\n      {/** Middle Box */}\n      <Box\n        s\n        flex={1}\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"flex-end\"\n      >\n        {history.length > 0 && (\n          <Line\n            type=\"line\"\n            data={{\n              labels: [\n                ...history\n                  .filter((county) => county.ags === item.AGS)[0]\n                  .history.slice(-10)\n                  .map((dateData) =>\n                    convertTimesStampToDateString(dateData.date)\n                  ),\n              ],\n              datasets: [\n                {\n                  data: [\n                    ...history\n                      .filter((county) => county.ags === item.AGS)[0]\n                      .history.slice(-10)\n                      .map((dateData) => dateData.weekIncidence),\n                  ],\n                  fill: false,\n                  backgroundColor: \"#9b3ec2\",\n                  borderColor: \"#5f2478\",\n                },\n              ],\n            }}\n            options={{\n              legend: {\n                display: false,\n              },\n            }}\n            width={0.3}\n            height={0.3}\n          />\n        )}\n      </Box>\n      {/** Right Box */}\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"flex-end\"\n        justifyContent=\"space-around\"\n      >\n        <Box display=\"flex\">\n          <Heading fontSize=\"xl\">{item.cases7_per_100k_txt}</Heading>\n          <Text ml=\"4px\" fontSize=\"10px\" alignSelf=\"flex-end\">\n            /100k\n          </Text>\n        </Box>\n        <Box display=\"flex\">\n          <Text fontSize=\"15px\" alignSelf=\"flex-end\">\n            {item.cases7_lk}\n          </Text>\n          <Text ml=\"4px\" fontSize=\"10px\" alignSelf=\"flex-end\">\n            abs. FÃ¤lle/7-Tage\n          </Text>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst App = () => {\n  const [rkiData, setRkiData] = useState<Array<ICovData>>([]);\n  const [history, setHistory] = useState<Array<ICovHistoryData>>([]);\n  const [fetchFailed, setFetchFailed] = useState<Boolean>(false);\n  const [favorites, setFavorites] = useState<Array<ICovData>>([]);\n  const [filterString, setFilterString] = useState<string>(\"\");\n\n  const isFavorite = (item: ICovData): boolean => favorites.includes(item);\n\n  //fetching Data from RKI Api\n  useEffect(() => {\n    const url: string =\n      \"https://services7.arcgis.com/mOBPykOjAyBO2ZKk/arcgis/rest/services/RKI_Landkreisdaten/FeatureServer/0/query?where=1%3D1&outFields=OBJECTID,AGS,BEZ,AGS_0,EWZ,death_rate,cases,deaths,cases_per_100k,cases_per_population,BL,BL_ID,county,last_update,cases7_per_100k,recovered,EWZ_BL,cases7_bl_per_100k,cases7_bl,death7_bl,cases7_lk,death7_lk,cases7_per_100k_txt,GEN&returnGeometry=false&outSR=4326&f=json\";\n    fetch(url)\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(\"Fetched Data!\", res);\n        setRkiData(\n          Object.values(res.features.map((items: any) => items.attributes))\n        );\n      })\n      .catch((error) => {\n        setFetchFailed(true);\n        console.log(\"Fetch failed!\", error);\n      });\n  }, []);\n\n  //fetching Data from Corona-Zahlen Api\n  useEffect(() => {\n    const covid_url: string = `https://api.corona-zahlen.org/districts/history/incidence`;\n    fetch(covid_url)\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(\"covid-zahlen\", Object.values(response.data)[0]);\n        setHistory(Object.values(response.data));\n      })\n      .then()\n      .catch((err) => console.log(\"covid-daten-api-fehler:\", err));\n  }, []);\n\n  const updateFavorites = async (item: ICovData) => {\n    if (isFavorite(item)) {\n      const newFavorites = [...favorites];\n      const indexOfObject = newFavorites.indexOf(item);\n      newFavorites.splice(indexOfObject, 1);\n      console.log(newFavorites);\n      setFavorites(newFavorites);\n      saveFavoritesToLocalStorage(newFavorites);\n    } else {\n      const newFavorites = [...favorites, item];\n      setFavorites(newFavorites);\n      saveFavoritesToLocalStorage(newFavorites);\n    }\n  };\n\n  //Load from Favorites\n  useEffect(() => {\n    const storedFavoritesJSON = localStorage.getItem(\"favorites\");\n    if (storedFavoritesJSON) {\n      const storedFavoriteCountys: Array<string> = JSON.parse(\n        storedFavoritesJSON\n      );\n      setFavorites(\n        rkiData.filter((item) => storedFavoriteCountys.includes(item.county))\n      );\n    } else {\n      console.log(\"no stored json found!\");\n    }\n  }, [rkiData]);\n\n  // Save to Favorites\n  const saveFavoritesToLocalStorage = (newFavorites: Array<ICovData>): void => {\n    localStorage.setItem(\n      \"favorites\",\n      JSON.stringify(newFavorites.map((fav) => fav.county))\n    );\n    console.log(\n      \"saved Favorites to localStorage!\",\n      newFavorites.map((fav) => fav.county)\n    );\n  };\n\n  const compare = (curr: ICovData, prev: ICovData): number => {\n    if (curr.county < prev.county) {\n      return -1;\n    }\n    if (curr.county > prev.county) {\n      return 1;\n    }\n    return 0;\n  };\n\n  return (\n    <Flex\n      direction=\"column\"\n      w=\"100vw\"\n      h=\"100vh\"\n      bgGradient=\"linear(to-b,#2F1847 ,#474a7a, #143642  20%)\"\n      align=\"center\"\n      pt=\"1rem\"\n      pl=\"1rem\"\n      pr=\"1rem\"\n    >\n      {\" \"}\n      <Box w=\"100vw\" align=\"center\">\n        <Heading as=\"h2\" color=\"gray.200\" pt=\"10px\">\n          Corona Fallzahlen:\n        </Heading>\n      </Box>\n      <Box w=\"100%\" pt=\"1rem\">\n        <Input\n          textColor=\"grey.100\"\n          colorScheme=\"grey.100\"\n          type=\"text\"\n          placeholder=\"Landkreis suchen\"\n          onChange={(event) => setFilterString(event.target.value)}\n          style={{ color: \"white\" }}\n        ></Input>\n      </Box>\n      {rkiData.length > 0 ? (\n        <Box overflowY=\"scroll\" overflowX=\"unset\" mt=\"1rem\" w=\"90vw\">\n          {\" \"}\n          <Box my=\"1em\">\n            <Text color=\"gray.100\">Favoriten:</Text>\n          </Box>\n          {favorites\n            .filter(\n              (item) =>\n                filterString.length < 1 ||\n                item.county.toLowerCase().includes(filterString.toLowerCase())\n            )\n            .map((favorite) => (\n              <CardComp\n                item={favorite}\n                isFavorite={isFavorite(favorite)}\n                handleFavoriteClick={() => {\n                  updateFavorites(favorite);\n                }}\n                history={history}\n              />\n            ))}\n          <Box my=\"1em\">\n            <Text color=\"gray.100\">Alle Landkreise:</Text>\n          </Box>\n          {rkiData\n            .sort(compare)\n            .filter(\n              (item) =>\n                filterString.length < 1 ||\n                item.county.toLowerCase().includes(filterString.toLowerCase())\n            )\n            .map((item) => (\n              <CardComp\n                item={item}\n                isFavorite={isFavorite(item)}\n                handleFavoriteClick={() => updateFavorites(item)}\n                history={[]}\n              />\n            ))}\n        </Box>\n      ) : (\n        <Box flex=\"1\" justify=\"center\" my=\"2em\">\n          {fetchFailed ? (\n            <Alert\n              status=\"error\"\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              textAlign=\"center\"\n              height=\"200px\"\n            >\n              <AlertIcon boxSize=\"40px\" mr={0} />\n              <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n                Fehler beim Laden aktueller Covid-Zahlen!\n              </AlertTitle>\n              <AlertDescription>\n                Es konnte nicht auf Daten des Robert-Koch-Instituts zugegriffen\n                werden.\n              </AlertDescription>\n            </Alert>\n          ) : (\n            <Spinner color=\"white\" />\n          )}\n        </Box>\n      )}\n      <Box\n        width=\"100vw\"\n        background=\"gray.800\"\n        display=\"flex\"\n        justifyContent=\"space-around\"\n        color=\"gray.200\"\n      >\n        <Text>\n          <Link isExternal href=\"https://www.hoyer-it.de\">\n            Â©Hoyer-IT 2021\n          </Link>{\" \"}\n        </Text>{\" \"}\n        <Text>|</Text>\n        <Text>\n          <Link isExternal href=\"https://www.hoyer-it.de/Impressum\">\n            Impressum und Datenschutz\n          </Link>\n        </Text>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default App;\n\nfunction convertTimesStampToDateString(date: Date): String {\n  const timeStamp = new Date(date);\n  const day: String =\n    timeStamp.getDay().toString().length === 1\n      ? \"0\" + timeStamp.getDay()\n      : timeStamp.getDate().toString();\n  const monthNumber: Number = timeStamp.getMonth() + 1;\n  const month: String =\n    monthNumber.toString().length === 1\n      ? \"0\" + monthNumber.toString()\n      : monthNumber.toString();\n\n  return day + \".\" + month;\n}\n//history[0].history.slice(-5).reverse()\n",["23","24"],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"25","replacedBy":"29"},{"ruleId":"27","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":8,"column":3,"nodeType":"33","messageId":"34","endLine":8,"endColumn":9},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],["35"],["36"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]