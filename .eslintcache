[{"/home/ansgar/codeProjects/reactProjects/ansgars-covid-dashboard/src/index.js":"1","/home/ansgar/codeProjects/reactProjects/ansgars-covid-dashboard/src/serviceWorkerRegistration.js":"2","/home/ansgar/codeProjects/reactProjects/ansgars-covid-dashboard/src/App.tsx":"3"},{"size":412,"mtime":1610566982130,"results":"4","hashOfConfig":"5"},{"size":5064,"mtime":1610311448880,"results":"6","hashOfConfig":"5"},{"size":6879,"mtime":1610578199630,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"140e5g1",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"/home/ansgar/codeProjects/reactProjects/ansgars-covid-dashboard/src/index.js",[],["18","19"],"/home/ansgar/codeProjects/reactProjects/ansgars-covid-dashboard/src/serviceWorkerRegistration.js",[],["20","21"],"/home/ansgar/codeProjects/reactProjects/ansgars-covid-dashboard/src/App.tsx",["22","23"],"import { StarIcon, TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Flex,\n  Heading,\n  Icon,\n  Input,\n  Spinner,\n  Text,\n} from \"@chakra-ui/react\";\nimport React, {\n  FunctionComponent,\n  Reducer,\n  useEffect,\n  useReducer,\n  useState,\n} from \"react\";\n\ninterface ICovData {\n  cases: number;\n  deaths: number;\n  ags: string;\n  county: string;\n  state: string;\n  population: number;\n  name: string;\n  casesPerWeek: number;\n  deathsPerWeek: number;\n  recovered: number;\n  weekIncidence: number;\n  casesPer100k: number;\n  stateAbbreviation: string;\n  delta: {\n    cases: number;\n    deaths: number;\n    recovered: number;\n  };\n}\n\ninterface ICardCompProps {\n  item: ICovData;\n  isFavorite: boolean;\n  handleFavoriteClick: () => void;\n}\n\ninterface IFavoriteReducerAction {\n  type: string;\n  payload: ICovData;\n}\n\nconst CardComp = ({\n  item,\n  isFavorite,\n  handleFavoriteClick,\n}: ICardCompProps) => {\n  return (\n    <Box\n      key={item.ags}\n      background={Math.round(item.weekIncidence) >= 200 ? \"#ff1f1f\" : \"white\"}\n      m=\"3px\"\n      px=\"12px\"\n      py=\"12px\"\n      borderRadius=\"5px\"\n      color=\"gray.600\"\n      fontWeight=\"semibold\"\n      letterSpacing=\"wide\"\n      ml=\"2\"\n      display=\"flex\"\n      justifyContent=\"space-between\"\n    >\n      <Box>\n        <Box display=\"flex\">\n          <Icon\n            as={StarIcon}\n            color={isFavorite ? \"#bfbf02\" : \"#8f8f8f\"}\n            w=\"13px\"\n            mr=\"8px\"\n            onClick={handleFavoriteClick}\n          />\n          <Heading fontSize=\"l\">{item.county}:</Heading>\n        </Box>\n        <Text>{item.state}</Text>\n      </Box>\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"space-around\"\n      >\n        <Heading fontSize=\"l\">{Math.round(item.weekIncidence)}</Heading>\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" w=\"3em\">\n          <Icon\n            as={item.delta.cases > 0 ? TriangleUpIcon : TriangleDownIcon}\n            w=\"13px\"\n            mr=\"2px\"\n          />\n          <Text fontSize=\"sm\">{item.delta.cases} </Text>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst App: FunctionComponent = () => {\n  const favoritesReducer = (\n    favorites: Array<ICovData>,\n    action: IFavoriteReducerAction\n  ) => {\n    switch (action.type) {\n      case \"addFavorite\":\n        return [...favorites, action.payload];\n      case \"removeFavorite\":\n        const newFavorites = [...favorites];\n        const indexOfObject = newFavorites.indexOf(action.payload);\n        newFavorites.splice(indexOfObject, 1);\n        console.log(newFavorites);\n        return newFavorites;\n      default:\n        throw new Error();\n    }\n  };\n\n  const [data, setData] = useState<Array<ICovData>>([]);\n  const [favorites, dispatchFavorites] = useReducer(favoritesReducer, []);\n  const [filterString, setFilterString] = useState<string>(\"\");\n\n  const isFavorite = (item: ICovData) => favorites.includes(item);\n  const testDataSet: ICovData = {\n    ags: \"07131\",\n    name: \"Ahrweiler\",\n    county: \"LK Ahrweiler\",\n    state: \"Rheinland-Pfalz\",\n    population: 130086,\n    cases: 2305,\n    deaths: 35,\n    casesPerWeek: 175,\n    deathsPerWeek: 1,\n    stateAbbreviation: \"RP\",\n    recovered: 1859,\n    weekIncidence: 134.52639023415279,\n    casesPer100k: 1771.9047399412696,\n    delta: { cases: 20, deaths: 0, recovered: 40 },\n  };\n\n  useEffect(() => {\n    fetch(\"https://api.corona-zahlen.org/districts\")\n      .then((res) => res.json())\n\n      .then((res) => {\n        console.log(\"Fetched Data!\", res);\n        setData(Object.values(res.data));\n      })\n      .catch((error) => console.log(\"Fetch failed!\", error));\n  }, []);\n\n  const compare = (curr: ICovData, prev: ICovData): number => {\n    if (curr.name < prev.name) {\n      return -1;\n    }\n    if (curr.name > prev.name) {\n      return 1;\n    }\n    return 0;\n  };\n\n  return (\n    <Flex\n      direction=\"column\"\n      w=\"100vw\"\n      h=\"100vh\"\n      bgGradient=\"linear(to-b,#686973 ,#474a7a, #143642  20%)\"\n      align=\"center\"\n      pt=\"1rem\"\n      pl=\"1rem\"\n      pr=\"1rem\"\n    >\n      <Box w=\"100vw\" align=\"center\">\n        <Heading as=\"h2\" color=\"gray.200\" pt=\"10px\">\n          Corona Fallzahlen:\n        </Heading>\n\n        <Text color=\"gray.300\">auf 100k Einwohner</Text>\n      </Box>\n      <Box w=\"100%\" pt=\"1rem\">\n        <Input\n          color=\"grey.100\"\n          type=\"text\"\n          placeholder=\"Landkreis suchen\"\n          onChange={(event) => setFilterString(event.target.value)}\n        ></Input>\n      </Box>\n\n      {data.length > 0 ? (\n        <Box overflowY=\"scroll\" overflowX=\"unset\" mt=\"1rem\" w=\"90vw\">\n          <Box my=\"1em\">\n            <Text color=\"gray.100\">Favoriten:</Text>\n          </Box>\n          {favorites.map((favorite) => (\n            <CardComp\n              item={favorite}\n              isFavorite={isFavorite(favorite)}\n              handleFavoriteClick={() =>\n                dispatchFavorites({\n                  type: isFavorite(favorite) ? \"removeFavorite\" : \"addFavorite\",\n                  payload: favorite,\n                })\n              }\n            />\n          ))}\n          <Box my=\"1em\">\n            <Text color=\"gray.100\">Alle Landkreise:</Text>\n          </Box>\n          {data\n            .sort(compare)\n            .filter(\n              (item) =>\n                filterString.length < 1 ||\n                item.county.toLowerCase().includes(filterString.toLowerCase())\n            )\n            .map((item) => (\n              <CardComp\n                item={item}\n                isFavorite={isFavorite(item)}\n                handleFavoriteClick={() => {\n                  dispatchFavorites({\n                    type: isFavorite(item) ? \"removeFavorite\" : \"addFavorite\",\n                    payload: item,\n                  });\n                }}\n              />\n            ))}\n        </Box>\n      ) : (\n        <Box flex=\"1\" justify=\"center\">\n          <Spinner color=\"white\" />\n        </Box>\n      )}\n    </Flex>\n  );\n};\n\nexport default App;\n\n/**\n * \n * {Object.entries(data)\n                .filter((item) => {\n                  return true;\n                })\n                .map((item) => (\n                  <CardComp\n                    item={item}\n                    favorites={favorites}\n                    onStarClick={onStarClick}\n                  />\n                ))}\n */\n\n/**\n  * \n  * \n  *  {Object.entries(data.data)\n            .sort(compare)\n            .filter(\n              (item) =>\n                filterString.length < 1 ||\n                item[1].county\n                  .toLowerCase()\n                  .includes(filterString.toLowerCase())\n            )\n            .map((item) => (\n              <CardComp\n                item={item}\n                favorites={favorites}\n                onStarClick={onStarClick}\n              />\n            ))}\n  */\n",["24","25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"26","replacedBy":"30"},{"ruleId":"28","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":13,"column":3,"nodeType":"34","messageId":"35","endLine":13,"endColumn":10},{"ruleId":"32","severity":1,"message":"36","line":128,"column":9,"nodeType":"34","messageId":"35","endLine":128,"endColumn":30},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],["37"],["38"],"@typescript-eslint/no-unused-vars","'Reducer' is defined but never used.","Identifier","unusedVar","'testDataSet' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]